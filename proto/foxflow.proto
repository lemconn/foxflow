syntax = "proto3";

package generated;

option go_package = "github.com/lemconn/foxflow/proto/generated";

// 简化的 FoxFlow gRPC 服务定义
service FoxFlowService {
  // 认证
  rpc Authenticate(AuthRequest) returns (AuthResponse);
  
  // Token 刷新
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);
  
  // 命令传递
  rpc SendCommand(CommandRequest) returns (CommandResponse);
  
  // 新闻查询
  rpc GetNews(GetNewsRequest) returns (GetNewsResponse);
}

// 认证请求
message AuthRequest {
  string username = 1;
  string password = 2;
}

// 认证响应
message AuthResponse {
  bool success = 1;
  string message = 2;
  string access_token = 3;    // JWT access token
  int64 expires_at = 4;       // Token 过期时间 (Unix 时间戳)
}

// 命令请求
message CommandRequest {
  string command = 1;
  repeated string args = 2;
  string exchange = 3;
  string account = 4;
  string access_token = 5;    // JWT access token
}

// 命令响应
message CommandResponse {
  bool success = 1;
  string message = 2;
}

// 新闻查询请求
message GetNewsRequest {
  int32 count = 1;        // 获取新闻数量
  string source = 2;      // 新闻源名称（可选）
  string access_token = 3; // JWT access token
}

// 新闻项
message NewsItem {
  string id = 1;                    // 新闻唯一标识
  string title = 2;                 // 新闻标题
  string content = 3;               // 新闻内容
  string url = 4;                   // 新闻链接
  string source = 5;                // 新闻源名称
  int64 published_at = 6;           // 发布时间（Unix时间戳）
  repeated string tags = 7;         // 标签列表
  string image_url = 8;             // 图片链接
}

// 新闻查询响应
message GetNewsResponse {
  bool success = 1;
  string message = 2;
  repeated NewsItem news = 3;       // 新闻列表
}

// Token 刷新请求
message RefreshTokenRequest {
  string access_token = 1;          // 当前的 access token
}

// Token 刷新响应
message RefreshTokenResponse {
  bool success = 1;
  string message = 2;
  string access_token = 3;          // 新的 JWT access token
  int64 expires_at = 4;             // 新的过期时间 (Unix 时间戳)
}
